#include<pthread.h>
#include<stdio.h>
#include<unistd.h>
#include<sys/wait.h>
#include<stdlib.h>

#define NEW 0
#define READY 1
#define WAITING 2
#define RUNNING 3
#define EXIT 4

int nowtime=0,timeinrunning=0,EXIT_PROCESS_STATUS=0,DO_CT=1,n,i,j;
struct Process_Cont_struct 
{
	int pid;
	int state;
	int timeleft;
	int at;
	float priority;
	int timeinwt;
	int wt,tat,ct,exect;
	struct Process_Cont_struct *prev;
	struct Process_Cont_struct *next;
} *process_all;
struct Queue
{
	struct Process_Cont_struct *left ,*right;
}*RQ;

void enqueue(struct Process_Cont_struct *proc)
{
	if(RQ->left==NULL)
	{
		RQ->left=proc;
		RQ->right=proc;
		proc->next=NULL;
	}
        
	else
	{
		if(proc->priority>RQ->left->priority)
		{
			proc->next=RQ->left;
			RQ->left->prev=proc;
			RQ->left=proc;
		}
